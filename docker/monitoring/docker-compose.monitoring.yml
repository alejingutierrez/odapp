# ODA Platform - Monitoring Stack
# Prometheus, Grafana, and logging services

services:
  # Metrics Collection
  prometheus:
    image: prom/prometheus:latest
    container_name: oda-prometheus
    restart: unless-stopped
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    ports:
      - '9090:9090'
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - ./prometheus/rules:/etc/prometheus/rules
      - prometheus_data:/prometheus
    networks:
      - oda-network
    depends_on:
      - node-exporter
      - cadvisor

  # System Metrics
  node-exporter:
    image: prom/node-exporter:latest
    container_name: oda-node-exporter
    restart: unless-stopped
    ports:
      - '9100:9100'
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    networks:
      - oda-network

  # Container Metrics
  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    container_name: oda-cadvisor
    restart: unless-stopped
    ports:
      - '8080:8080'
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro
    privileged: true
    devices:
      - /dev/kmsg
    networks:
      - oda-network

  # Visualization
  grafana:
    image: grafana/grafana:latest
    container_name: oda-grafana
    restart: unless-stopped
    environment:
      - GF_SECURITY_ADMIN_USER=${GRAFANA_USER:-admin}
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD:-admin}
      - GF_USERS_ALLOW_SIGN_UP=false
    ports:
      - '3000:3000'
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
      - ./grafana/dashboards:/var/lib/grafana/dashboards
    networks:
      - oda-network
    depends_on:
      - prometheus

  # Log Aggregation
  loki:
    image: grafana/loki:latest
    container_name: oda-loki
    restart: unless-stopped
    ports:
      - '3100:3100'
    volumes:
      - ./loki/loki-config.yml:/etc/loki/local-config.yaml
      - loki_data:/loki
    command: -config.file=/etc/loki/local-config.yaml
    networks:
      - oda-network

  # Log Collection
  promtail:
    image: grafana/promtail:latest
    container_name: oda-promtail
    restart: unless-stopped
    volumes:
      - /var/log:/var/log:ro
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - ./promtail/promtail-config.yml:/etc/promtail/config.yml
    command: -config.file=/etc/promtail/config.yml
    networks:
      - oda-network
    depends_on:
      - loki

  # Application Performance Monitoring
  jaeger:
    image: jaegertracing/all-in-one:latest
    container_name: oda-jaeger
    restart: unless-stopped
    environment:
      - COLLECTOR_ZIPKIN_HTTP_PORT=9411
    ports:
      - '16686:16686' # Jaeger UI
      - '14268:14268' # Jaeger collector
    networks:
      - oda-network

  # Uptime Monitoring
  uptime-kuma:
    image: louislam/uptime-kuma:latest
    container_name: oda-uptime-kuma
    restart: unless-stopped
    ports:
      - '3001:3001'
    volumes:
      - uptime_data:/app/data
    networks:
      - oda-network

volumes:
  prometheus_data:
    driver: local
  grafana_data:
    driver: local
  loki_data:
    driver: local
  uptime_data:
    driver: local

networks:
  oda-network:
    external: true
